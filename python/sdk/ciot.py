# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: ciot/ciot.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class Permission(betterproto.Enum):
    """Permissions associated with an RPC method"""

    PERMISSION_UNSPECIFIED = 0
    PERMISSION_PUBLIC = 1
    PERMISSION_USER = 2
    PERMISSION_USER_ADMIN = 3
    PERMISSION_COMPASS = 4
    PERMISSION_COMPASS_ADMIN = 5


class RateUnit(betterproto.Enum):
    """Unit of measurement for Rate limiting purposes"""

    RATE_UNIT_UNSPECIFIED = 0
    RATE_UNIT_SECOND = 1
    RATE_UNIT_MINUTE = 2
    RATE_UNIT_HOUR = 3
    RATE_UNIT_DAY = 4


class RateLimitAlgorithm(betterproto.Enum):
    """Behaviour when rate limit has been reached"""

    RATE_LIMIT_ALGORITHM_UNSPECIFIED = 0
    RATE_LIMIT_ALGORITHM_LEAKY_BUCKET = 1
    RATE_LIMIT_ALGORITHM_TOKEN_BUCKET = 2


class Log(betterproto.Enum):
    """Log behaviour"""

    LOG_POSTGRES = 0
    LOG_STDOUT = 1


class ValidateWkt(betterproto.Enum):
    """
    Validate that a given field is in correct [WKT
    format](https://en.wikipedia.org/wiki/Well-
    known_text_representation_of_geometry) Of a given type
    """

    VALIDATE_WKT_UNSPECIFIED = 0
    VALIDATE_WKT_LINESTRING = 1
    VALIDATE_WKT_MULTILINESTRING = 2
    VALIDATE_WKT_POLYGON = 4
    VALIDATE_WKT_MULTIPOLYGON = 8


@dataclass
class RateLimit(betterproto.Message):
    """
    Rate limiting for RPC methods RPU = requests per unit e.g. { rpu: 5, unit:
    "second" } -> 5 requests per second
    """

    rpu: int = betterproto.uint64_field(1)
    unit: "RateUnit" = betterproto.enum_field(2)
    alg: "RateLimitAlgorithm" = betterproto.enum_field(3)


@dataclass
class MultiValidateWkt(betterproto.Message):
    validate_wkt: List["ValidateWkt"] = betterproto.enum_field(1)


@dataclass
class Global(betterproto.Message):
    """redirects to correct region globally based on location of wkt"""

    wkt: bool = betterproto.bool_field(1)
